# Sample command:
# oumi launch up --config configs/examples/vision/blip2_opt_2.7b/oumi_gcp_job.yaml --cluster my-oumi-cluster

name: blip2-opt-2.7b-sft-oumi-train

resources:
  cloud: gcp
  accelerators: "A100:4"
  # Allow Spot VM-s for A100 40GB GPUs, which are plentiful on GCP, and cost ~3X less.
  use_spot: true
  disk_size: 500 # Disk size in GBs

num_nodes: 1 # Set it to N for multi-node training.

# Upload working directory to remote ~/sky_workdir.
working_dir: .

# Mount local files.
file_mounts:
  ~/.netrc: ~/.netrc # WandB credentials

envs:
  WANDB_PROJECT: oumi-train
  OUMI_RUN_NAME: blip2_opt_2.7b.sft
  ACCELERATE_LOG_LEVEL: info
  TOKENIZERS_PARALLELISM: false

setup: |
  set -e
  pip install uv && uv pip install '.[gpu]'
  # Install model from HF Hub. This tool increases download speed compared to
  # downloading the model during training.
  pip install hf_transfer
  HF_HUB_ENABLE_HF_TRANSFER=1 huggingface-cli download Salesforce/blip2-opt-2.7b

run: |
  set -e  # Exit if any command failed.
  source ./configs/examples/misc/sky_init.sh

  set -x  # Print "torchrun" command with expanded variables
  torchrun \
      --nnodes=${OUMI_NUM_NODES} \
      --node-rank=${SKYPILOT_NODE_RANK} \
      --nproc-per-node=${SKYPILOT_NUM_GPUS_PER_NODE} \
      --master-addr=${OUMI_MASTER_ADDR} \
      --master-port=8007 \
      -m oumi.train \
      -c configs/examples/vision/blip2_opt_2.7b/sft_train.yaml \
      "training.run_name='${OUMI_RUN_NAME}.${SKYPILOT_TASK_ID}'" \
      "training.trainer_type=OUMI" \
      "training.max_steps=20" \
      "training.save_steps=0" \
      "training.save_final_model=false"

  echo "Node ${SKYPILOT_NODE_RANK} is all done!"
