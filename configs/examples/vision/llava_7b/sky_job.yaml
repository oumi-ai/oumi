name: llava-7b-sft

num_nodes: 1 # Set it to N for multi-node training.

resources:
  accelerators: { "A100-80GB": 4 }
  any_of:
    - use_spot: true
    - use_spot: false

  disk_tier: "medium"
  disk_size: 500 # Disk size in GBs

# Upload working directory to remote ~/sky_workdir.
workdir: .

# Mount local files.
file_mounts:
  ~/.netrc: ~/.netrc # WandB credentials

envs:
  WANDB_PROJECT: oumi-train
  OUMI_RUN_NAME: llava.7b.sft
  ACCELERATE_LOG_LEVEL: info
  TOKENIZERS_PARALLELISM: false

setup: |
  set -e
  pip install uv && uv pip install '.[gpu]'
  # Install model from HF Hub. This tool increases download speed compared to
  # downloading the model during training.
  pip install hf_transfer
  HF_HUB_ENABLE_HF_TRANSFER=1 huggingface-cli download llava-hf/llava-1.5-7b-hf

run: |
  set -e  # Exit if any command failed.
  source ./configs/examples/misc/sky_init.sh

  set -x  # Print "torchrun" command with expanded variables
  torchrun \
      --nnodes=${OUMI_NUM_NODES} \
      --node-rank=${SKYPILOT_NODE_RANK} \
      --nproc-per-node=${SKYPILOT_NUM_GPUS_PER_NODE} \
      --master-addr=${OUMI_MASTER_ADDR} \
      --master-port=8007 \
      -m oumi.train \
      -c configs/examples/vision/llava_7b/sft_train.yaml \
      "training.run_name='${OUMI_RUN_NAME}.${SKYPILOT_TASK_ID}'" \
      "training.max_steps=20" \
      "training.save_steps=0" \
      "training.save_final_model=false"

  echo "Node ${SKYPILOT_NODE_RANK} is all done!"
