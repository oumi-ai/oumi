##################################################################
# Skypilot Launch Parameters : LoRA SFT Training  of Llama3.1 8B #
##################################################################
#
# Launches 4 A-100:40GB each, on GCP, via torchrun (DDP).
#
# Example command:
# sky launch -r --cloud GCP -c llama3.1_8B_lora_sft_ddp \
# configs/examples/llama3_1/sft/8b_lora/sky_job.yaml
#
##################################################################

envs:
  WANDB_PROJECT: oumi-train
  OUMI_RUN_NAME: llama3.1_8B_lora_sft_ddp
  ACCELERATE_LOG_LEVEL: info
  TOKENIZERS_PARALLELISM: false
  OUMI_TRAIN_TOP_OUT_DIR: null # Specify explicitly where to save your run/model

name: llama3.1_8B_lora_sft_ddp

resources:
  accelerators: {"A100": 4}
  use_spot: true

# Upload working directory to remote ~/sky_workdir.
workdir: .

# Mount local files.
file_mounts:
  ~/.netrc: ~/.netrc  # WandB credentials

  # Mount HF token, which is needed to download locked-down models from HF Hub.
  # This is created on your local machine by running `huggingface-cli login`.
  ~/.cache/huggingface/token: ~/.cache/huggingface/token

setup: |
  set -e
  pip install -e '.[gpu]'

run: |
  set -e  # Exit if any command failed.
  source ./configs/examples/misc/sky_init.sh

  set -x
  oumi distributed torchrun \
      -m oumi train \
      -c configs/examples/llama3_1/sft/8b_lora/train.yaml \
      --training.run_name "${OUMI_RUN_NAME}.${SKYPILOT_TASK_ID}" \
      --training.output_dir "${OUMI_RUN_NAME}" \
      --training.logging_dir "${OUMI_RUN_NAME}/runs"

  echo "Node ${SKYPILOT_NODE_RANK} is all done!"
