name: llama8b-sft

num_nodes: 1 # Set it to N for multi-node training.

resources:
  accelerators: { "A100": 4 }
  any_of:
    - use_spot: true
    - use_spot: false
  disk_size: 200 # Disk size in GBs

# Upload working directory to remote ~/sky_workdir.
workdir: .

# Mount local files.
file_mounts:
  ~/.netrc: ~/.netrc # WandB credentials
  ~/.cache/huggingface/token: ~/.cache/huggingface/token # mount HF token

envs:
  WANDB_PROJECT: oumi-train
  OUMI_RUN_NAME: llama8b.sft
  ACCELERATE_LOG_LEVEL: info

setup: |
  set -e
  pip install '.[train,gpu]'
  # Install model from HF Hub. This tool increases download speed compared to
  # downloading the model during training.
  pip install hf_transfer
  HF_HUB_ENABLE_HF_TRANSFER=1 huggingface-cli download meta-llama/Meta-Llama-3.1-8B-Instruct

run: |
  set -e  # Exit if any command failed.
  source ./configs/skypilot/sky_init.sh

  TOTAL_NUM_GPUS=$((${OUMI_NUM_NODES} * ${SKYPILOT_NUM_GPUS_PER_NODE}))
  if test ${TOTAL_NUM_GPUS} -lt 2; then
    echo "Using FSDP with only 1 GPU may lead to errors. Multiple GPUs are expected."
  fi

  set -x  # Print "accelerate launch" command with expanded variables
  accelerate launch \
      --num_machines ${OUMI_NUM_NODES} \
      --machine_rank ${SKYPILOT_NODE_RANK} \
      --num_processes ${TOTAL_NUM_GPUS} \
      --main_process_ip ${OUMI_MASTER_ADDR} \
      --main_process_port 8007 \
      --use_fsdp \
      --config_file configs/accelerate/llama8b.fsdp.yaml \
      -m oumi.train \
      -c configs/oumi/llama8b.sft.yaml \
      "training.run_name='${OUMI_RUN_NAME}.${SKYPILOT_TASK_ID}'" \
      "training.max_steps=10" \
      "training.save_steps=10" \
      "training.save_final_model=true"

  echo "Node ${SKYPILOT_NODE_RANK} is all done!"
