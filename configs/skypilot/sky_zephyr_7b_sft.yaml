name: lema-train-example

num_nodes: 1 # Set it to N for multi-node training.

resources:
  # Use 1 of the following GPUs depending on availability. No preference.
  # To view other GPU types use the following commands:
  # `sky show-gpus`, `sky show-gpus -a`
  accelerators: {"A100-80GB": 8}

  disk_size: 200      # Disk size in GB
  # disk_tier: medium # medium is the default.
  # region: us-west1  # Uncomment this line to only consider a specific region.

  any_of:
    - use_spot: true
    - use_spot: false

# Upload a working directory to remote ~/sky_workdir.
workdir: .

# Mount GPC-Bucket (E.g., to save the checkpoints)
file_mounts:

  /output_dir_gcs:
    source: gs://lema-dev-us-central1
    store: gcs
    mode: MOUNT

  # Upload local files.
  ~/.netrc: ~/.netrc # mount local netrc file to access private repos

envs:
  WANDB_PROJECT: lema-train-test
  HF_TOKEN: null # forces the user to pass it
  LEMA_RUN_NAME: "zephyr.7b.sft.full"


setup: |
  set -e
  pip install '.[all]'
  FLASH_ATTENTION_SKIP_CUDA_BUILD=TRUE pip install flash-attn --no-build-isolation

run: |
  set -e  # Exit if any command failed.

  # Run some checks, and export "LEMA_*" env vars
  source ./configs/skypilot/sky_init.sh

  torchrun \
      --nnodes=${LEMA_NUM_NODES} \
      --node-rank=${SKYPILOT_NODE_RANK} \
      --nproc-per-node=${SKYPILOT_NUM_GPUS_PER_NODE} \
      --master-addr=${LEMA_MASTER_ADDR} \
      --master-port=8007 \
      -m lema.train \
      -c configs/lema/zephyr.7b/sft/full.yaml \
      "training.run_name='${LEMA_RUN_NAME}.${SKYPILOT_TASK_ID}'" \
      "training.enable_wandb=true" \
      "training.enable_tensorboard=true" \
      "training.output_dir=/output_dir_gcs/panos/output/${LEMA_RUN_NAME}" \
      "training.include_performance_metrics=false"
