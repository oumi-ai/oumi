name: llama3-8b-aya-sft

num_nodes: 1 # Set it to N for multi-node training.

resources:
  # Use 1 of the following GPUs depending on availability. No preference.
  # To view other GPU types use the following commands:
  # `sky show-gpus`, `sky show-gpus -a`
  accelerators: {"A100-80GB-SXM": 8}
  # To configure single-node, multi-gpu (N GPUs) training, do the following:
  # Set `accelerators:` above to something like this: {"A40": N}

  disk_size: 500      # Disk size in GB
  # disk_tier: medium # medium is the default.
  # region: us-west3  # Uncomment this line to only consider a specific region.

  any_of:
    - use_spot: true  # See https://github.com/openlema/lema/wiki/Clouds-Setup#spot-vms-on-gcp
    - use_spot: false

# Upload a working directory to remote ~/sky_workdir.
workdir: .

# Upload local files.
file_mounts:
  ~/.netrc: ~/.netrc # mount local netrc file to access private repos
  # /artifacts:
  #   name: lema-dev-private # Not available on lambda
  #   mode: MOUNT

envs:
  WANDB_PROJECT: lema-train-test
  LEMA_RUN_NAME: llama3.8b.aya.sft
  TOKENIZERS_PARALLELISM: true

setup: |
  set -e
  pip install '.[train]'
  FLASH_ATTENTION_SKIP_CUDA_BUILD=TRUE pip install flash-attn --no-build-isolation

run: |
  set -e  # Exit if any command failed.

  # Runs some checks, and export "LEMA_*" env vars
  source ./configs/skypilot/sky_init.sh

  set -x  # Print "torchrun" command with expanded variables
  torchrun \
      --nnodes=${LEMA_NUM_NODES} \
      --node-rank=${SKYPILOT_NODE_RANK} \
      --nproc-per-node=${SKYPILOT_NUM_GPUS_PER_NODE} \
      --master-addr=${LEMA_MASTER_ADDR} \
      --master-port=8007 \
      -m lema.train \
      -c configs/lema/llama3.8b.aya.sft.yaml \
      "training.run_name='${LEMA_RUN_NAME}.${SKYPILOT_TASK_ID}'" \
      "training.output_dir=train/" \
      "training.enable_wandb=false" \
      "training.enable_tensorboard=true" \
      "training.include_performance_metrics=true" \
      "training.dataloader_num_workers=1" \
      "training.dataloader_prefetch_factor=1024" \
      "training.logging_steps=10"

  echo "Node ${SKYPILOT_NODE_RANK} is all done!"
