name: llama8b-lora

resources:
  accelerators: {"A100": 4}
  any_of:
    - use_spot: true
    - use_spot: false
  disk_size: 200  # Disk size in GB

# Upload working directory to remote ~/sky_workdir.
workdir: .

# Mount local files.
file_mounts:
  ~/.netrc: ~/.netrc  # WandB credentials
  # Mount HF token, which is needed to download locked-down models from HF Hub.
  # This is created on the local machine by running `huggingface-cli login`.
  ~/.cache/huggingface/token: ~/.cache/huggingface/token

envs:
  WANDB_PROJECT: oumi-train
  OUMI_RUN_NAME: llama8b.lora
  ACCELERATE_LOG_LEVEL: info
  # https://github.com/huggingface/tokenizers/issues/899#issuecomment-1027739758
  TOKENIZERS_PARALLELISM: false

setup: |
  set -e
  pip install '.[train]'
  pip install '.[gpu]'
  # Install model from HF Hub. This tool increases download speed compared to
  # downloading the model during training.
  pip install hf_transfer
  HF_HUB_ENABLE_HF_TRANSFER=1 huggingface-cli download meta-llama/Meta-Llama-3.1-8B-Instruct

run: |
  set -e  # Exit if any command failed.
  source ./configs/skypilot/sky_init.sh

  TOTAL_NUM_GPUS=$((${OUMI_NUM_NODES} * ${SKYPILOT_NUM_GPUS_PER_NODE}))
  ACCELERATE_MULTI_GPU_OPTION=
  if test ${TOTAL_NUM_GPUS} -gt 1; then
    ACCELERATE_MULTI_GPU_OPTION="--multi_gpu"
  fi

  set -x  # Print "accelerate launch" command with expanded variables
  accelerate launch \
      --num_machines ${OUMI_NUM_NODES} \
      --machine_rank ${SKYPILOT_NODE_RANK} \
      --num_processes ${TOTAL_NUM_GPUS} \
      --main_process_ip ${OUMI_MASTER_ADDR} \
      --main_process_port 8007 \
      ${ACCELERATE_MULTI_GPU_OPTION} \
      --config_file configs/accelerate/llama.ddp.yaml \
      -m oumi.train \
      -c configs/oumi/llama8b.lora.yaml \
      "training.run_name='${OUMI_RUN_NAME}.${SKYPILOT_TASK_ID}'" \
      "training.max_steps=100" \
      "training.save_final_model=false"

  echo "Node ${SKYPILOT_NODE_RANK} is all done!"
