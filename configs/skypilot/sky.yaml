name: lema-train-example

num_nodes: 1

resources:
  # Use 1 of the following GPUs depending on availability. No preference.
  # To view other GPU types use the following commands:
  # `sky show-gpus`, `sky show-gpus -a`
  accelerators: { "A40": 1 } # , "A10", "A10g", "A100-80GB-SXM"}
  # To configure single-node, multi-gpu (N GPUs) training, do the following:
  # Set `accelerators:` above to something like this: {"A40": N}

  any_of:
    - use_spot: true
    - use_spot: false

# Upload a working directory to remote ~/sky_workdir.
workdir: .

# Upload local files.
file_mounts:
  ~/.netrc: ~/.netrc # mount local netrc file to access private repos
  # /artifacts:
  #   name: lema-dev-private # Not available on lambda
  #   mode: MOUNT

envs:
  WANDB_PROJECT: lema-train-test

setup: |
  set -e
  pip install '.[train]'

run: |
  set -e  # Exit if any command failed.

  echo "SkyPilot node IPs: ${SKYPILOT_NODE_IPS}"
  echo "SkyPilot node rank: ${SKYPILOT_NODE_RANK}"
  num_nodes=`echo "$SKYPILOT_NODE_IPS" | wc -l`
  master_addr=`echo "$SKYPILOT_NODE_IPS" | head -n1`
  echo "Master address: ${master_addr}"
  echo "Number of nodes: ${num_nodes}"
  echo "Number of GPUs per node: ${SKYPILOT_NUM_GPUS_PER_NODE}

  if [[ -z "${master_addr}" ]]; then
    echo "Master address is empty!"
    exit 1
  fi

  torchrun --standalone \
      --nnodes ${num_nodes} \
      --nproc-per-node ${SKYPILOT_NUM_GPUS_PER_NODE} \
      --rdzv_id="${master_addr}" \
      --rdzv_endpoint=${master_addr}:1234 \
      --rdzv_backend=c10d \
      -m lema.train \
      -c configs/lema/phi3.dpo.nvidia.24g.yaml \
      "training.output_dir=train/" \
      "training.enable_wandb=true" \
      "training.enable_tensorboard=true" \
      "training.include_performance_metrics=false" \
      "training.per_device_train_batch_size=4" \
      "training.max_steps=5" \
      "training.logging_steps=10"
