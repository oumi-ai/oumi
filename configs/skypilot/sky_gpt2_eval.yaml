name: lema-eval-example

resources:
  # Use 1 of the following GPUs depending on availability. No preference.
  # To view other GPU types use the following commands:
  # `sky show-gpus`, `sky show-gpus -a`
  accelerators: {"A100"}
  # To configure single-node, multi-gpu (N GPUs) training, set `accelerators:` above to
  # something like this: {"A40": N}
  any_of:
    - use_spot: true
    - use_spot: false

  disk_size: 200      # Disk size in GB
  # disk_tier: medium # medium is the default.
  # region: us-central1  # Uncomment this line to only consider a specific GCP region.

# Upload a working directory to remote ~/sky_workdir.
workdir: .

# Upload local files.
file_mounts:
  # ~/.netrc: ~/.netrc  # mount local netrc file to access private repos
  # /artifacts:
  #   name: lema-dev-private # Not available on lambda
  #   mode: MOUNT

  # See https://github.com/openlema/lema/wiki/Clouds-Setup#mounting-gcs-buckets
  # for documentation on using GCS buckets.
  /output_dir_gcs:
    source: gs://lema-dev-us-central1
    store: gcs
    mode: MOUNT

envs:
  WANDB_PROJECT: lema-eval
  # The HellaSwag dataset requires trusted code to be enabled.
  HF_DATASETS_TRUST_REMOTE_CODE: 1

setup: |
  set -e
  pip install '.[train]'
  # Required for RunPod as a workaround since nvcc isn't installed
  # FLASH_ATTENTION_SKIP_CUDA_BUILD=TRUE pip install flash-attn --no-build-isolation
  pip install flash-attn --no-build-isolation

run: |
  set -e  # Exit if any command failed.

  # Run some checks, and export "LEMA_*" env vars
  source ./configs/skypilot/sky_init.sh
  python -m lema.evaluate_async \
      -c configs/lema/gpt2.asynceval.nvidia.yaml
