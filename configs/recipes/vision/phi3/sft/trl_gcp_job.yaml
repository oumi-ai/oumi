# Sample command:
# oumi launch up --config configs/recipes/vision/phi3/sft/trl_gcp_job.yaml --cluster my-oumi-cluster
name: phi3-sft-trl-train

resources:
  cloud: gcp
  accelerators: "A100-80GB:4"
  # Allow Spot VM-s, which cost ~3X less.
  use_spot: true
  disk_size: 1000 # Disk size in GBs

num_nodes: 1 # Set it to N for multi-node training.

# Upload working directory to remote ~/sky_workdir.
working_dir: .

# Mount local files.
file_mounts:
  ~/.netrc: ~/.netrc # WandB credentials

  # Mount HF token, which is needed to download locked-down models from HF Hub.
  # This is created on your local machine by running `huggingface-cli login`.
  ~/.cache/huggingface/token: ~/.cache/huggingface/token

envs:
  WANDB_PROJECT: oumi-train
  OUMI_RUN_NAME: phi3.fft.trl
  ACCELERATE_LOG_LEVEL: info
  TOKENIZERS_PARALLELISM: false

setup: |
  set -e
  pip install uv && uv pip install '.[gpu]' hf_transfer
  # Install model from HF Hub. This tool increases download speed compared to
  # downloading the model during training.
  HF_HUB_ENABLE_HF_TRANSFER=1 huggingface-cli download microsoft/Phi-3-vision-128k-instruct

  pip install -U flash-attn --no-build-isolation

run: |
  set -e  # Exit if any command failed.
  source ./configs/examples/misc/sky_init.sh

  set -x
  oumi distributed torchrun \
      -m oumi train \
      -c configs/recipes/vision/phi3/sft/train.yaml \
      --data.train.stream=True \
      --training.run_name "${OUMI_RUN_NAME}.${SKYPILOT_TASK_ID}" \
      --training.trainer_type=TRL_SFT \
      --training.dataloader_main_process_only=false \
      --training.dataloader_num_workers=2 \
      --training.max_steps=20 \
      --training.save_steps=0 \
      --training.save_final_model=false

  echo "Node ${SKYPILOT_NODE_RANK} is all done!"
