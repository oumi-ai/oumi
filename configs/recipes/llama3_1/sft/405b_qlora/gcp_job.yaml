# Config to FSDP QLoRA tune Llama 3.1 405B Instruct.
# Example command:
# oumi launch up -c configs/recipes/llama3_1/sft/405b_qlora/gcp_job.yaml --cluster llama405b-qlora-fsdp
name: llama405b-qlora-fsdp

resources:
  cloud: gcp
  accelerators: "A100-80GB:8"
  use_spot: true
  disk_size: 4000 # Disk size in GBs
  region: us-central1

working_dir: .

file_mounts:
  ~/.netrc: ~/.netrc  # WandB credentials
  # Mount HF token, which is needed to download locked-down models from HF Hub.
  # This is created on the local machine by running `huggingface-cli login`.
  ~/.cache/huggingface/token: ~/.cache/huggingface/token

storage_mounts:
  /gcs_dir:
    source: gs://oumi-dev-us-central1
    store: gcs

envs:
  WANDB_PROJECT: oumi-train
  OUMI_RUN_NAME: llama405b.qlora.fsdp
  ACCELERATE_LOG_LEVEL: info
  # https://github.com/huggingface/tokenizers/issues/899#issuecomment-1027739758
  TOKENIZERS_PARALLELISM: false

setup: |
  set -e
  pip install uv && uv pip install '.[gpu,quant]' hf_transfer
  # Install model from HF Hub. This tool increases download speed compared to
  # downloading the model during training.
  HF_HUB_ENABLE_HF_TRANSFER=1 huggingface-cli download meta-llama/Meta-Llama-3.1-405B-Instruct

run: |
  set -e  # Exit if any command failed.
  source ./configs/examples/misc/sky_init.sh

  set -x
  # Must use a float type for quantized data storage. See:
  # https://huggingface.co/docs/bitsandbytes/main/en/fsdp_qlora#quantized-data-storage.
  torchrun \
      --nnodes=${OUMI_NUM_NODES} \
      --node-rank=${SKYPILOT_NODE_RANK} \
      --nproc-per-node=${SKYPILOT_NUM_GPUS_PER_NODE} \
      --master-addr=${OUMI_MASTER_ADDR} \
      --master-port=8007 \
      -m oumi.train \
      -c configs/recipes/llama3_1/sft/405b_qlora/train.yaml \
      "training.run_name='${OUMI_RUN_NAME}.${SKYPILOT_TASK_ID}'" \
      "peft.bnb_4bit_quant_storage=bfloat16"

  echo "Node ${SKYPILOT_NODE_RANK} is all done!"
