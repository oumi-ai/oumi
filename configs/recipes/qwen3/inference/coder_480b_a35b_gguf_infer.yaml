# vLLM Inference config for Qwen3-Coder-480B-A35B-Instruct GGUF quantized model.
#
# Usage:
#   oumi infer -i -c configs/recipes/qwen3/inference/coder_480b_a35b_gguf_infer.yaml
#
# Model Info:
#   - Model: unsloth/Qwen3-Coder-480B-A35B-Instruct-GGUF
#   - Size: ~480B parameters (quantized)
#   - Format: GGUF Q4_K_M quantization
#   - Requirements: Extremely high VRAM (recommend 16x A100-80GB or equivalent)
#   - Special: Code generation and programming assistance model
#
# See Also:
#   - Documentation: https://oumi.ai/docs/en/latest/user_guides/infer/infer.html
#   - Config class: oumi.core.configs.InferenceConfig
#   - Config source: https://github.com/oumi-ai/oumi/blob/main/src/oumi/core/configs/inference_config.py
#   - Other inference configs: configs/**/inference/

model:
  # GGUF quantized model path - download specific GGUF file as needed
  model_name: "unsloth/Qwen3-Coder-480B-A35B-Instruct-GGUF"
  # Original model tokenizer for proper text processing
  tokenizer_name: "Qwen/Qwen3-Coder-480B-A35B-Instruct"
  model_max_length: 8192
  torch_dtype_str: "float16"  # GGUF models require float16
  trust_remote_code: True
  attn_implementation: "sdpa"

generation:
  max_new_tokens: 4096  # Larger for code generation
  temperature: 0.3  # Lower temperature for more precise code
  top_p: 0.9

engine: VLLM

# Optional: vLLM specific parameters
# vllm_args:
#   tensor_parallel_size: 16  # Adjust based on available GPUs
#   gpu_memory_utilization: 0.90
#   max_num_seqs: 4  # Very low for extremely large model