name: smollm2-17b-distill-r1-670b-math

num_nodes: 1
resources:
  cloud: gcp
  #accelerators: {L4, A10g, A10, L40, A40, A100, A100-80GB}
  accelerators: "A100-80GB:4"
  use_spot: false
  disk_size: 2000 # Disk size in GBs

working_dir: .

file_mounts:
  ~/.netrc: ~/.netrc  # WandB credentials
  # Mount HF token, which is needed to download locked-down models from HF Hub.
  # This is created on the local machine by running `huggingface-cli login`.
  ~/.cache/huggingface/token: ~/.cache/huggingface/token

envs:
  WANDB_PROJECT: oumi-train
  OUMI_RUN_NAME: smollm2-17b-distill-r1-670b-math
  OUMI_USER_NAME: oumi-ai
  ACCELERATE_LOG_LEVEL: info
  # https://github.com/huggingface/tokenizers/issues/899#issuecomment-1027739758
  TOKENIZERS_PARALLELISM: false
setup: |
  set -e
  pip install uv && uv pip install oumi[gpu] hf_transfer
  # Install model from HF Hub. This tool increases download speed compared to
  # downloading the model during training.
  HF_HUB_ENABLE_HF_TRANSFER=1 huggingface-cli download HuggingFaceTB/SmolLM2-1.7B-Instruct --exclude original/*
  huggingface-cli download oumi-ai/R1-jsonl --repo-type dataset --local-dir data/R1
  pip install -U flash-attn --no-build-isolation

run: |
  set -e  # Exit if any command failed.
  source ./configs/examples/misc/sky_init.sh

  set -x
  oumi distributed torchrun \
    -m oumi train \
    -c configs/recipes/smollm/sft/smollm2-1.7m/full_train_distill_r1_670b_math.yaml \
    --training.run_name "${OUMI_RUN_NAME}.${SKYPILOT_TASK_ID}" \
    --data.train.datasets "[{dataset_name: text_sft_jsonl, dataset_path: data/R1/math_10k_R1_outputs.jsonl}]"

  huggingface-cli upload "${OUMI_USER_NAME}/${OUMI_RUN_NAME}" "output/${OUMI_RUN_NAME}" --repo-type model  

  echo "Node ${SKYPILOT_NODE_RANK} is all done!"