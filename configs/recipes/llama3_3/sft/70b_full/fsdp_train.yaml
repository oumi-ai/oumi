# Class: oumi.core.configs.TrainingConfig
# https://github.com/oumi-ai/oumi/blob/main/src/oumi/core/configs/training_config.py

# FSDP SFT config for Llama 3.3 70B.
# Borrows param values from:
# https://github.com/pytorch/torchtune/blob/main/recipes/configs/llama3_2/3B_full.yaml

model:
  model_name: "meta-llama/Llama-3.3-70B-Instruct"
  model_max_length: 1024
  torch_dtype_str: "bfloat16"
  attn_implementation: "sdpa"
  chat_template: "llama3-instruct"
  load_pretrained_weights: True
  trust_remote_code: True

data:
  train:
    datasets:
      - dataset_name: "yahma/alpaca-cleaned"
    target_col: "prompt"
    use_async_dataset: True

training:
  trainer_type: "TRL_SFT"
  max_steps: 20
  per_device_train_batch_size: 1
  # gradient_accumulation_steps: 1

  enable_gradient_checkpointing: True
  gradient_checkpointing_kwargs:
    use_reentrant: False
  ddp_find_unused_parameters: False
  optimizer: "adamw_torch_fused" # try also paged_adamw_8bit
  learning_rate: 2.0e-05
  compile: False

  dataloader_num_workers: "auto"
  dataloader_prefetch_factor: 16

  save_steps: 0
  logging_steps: 5
  log_model_summary: False
  output_dir: "output/llama70b.fft"
  include_performance_metrics: True
  enable_wandb: True

fsdp:
  enable_fsdp: True
  sharding_strategy: "FULL_SHARD"
  forward_prefetch: True
  auto_wrap_policy: "TRANSFORMER_BASED_WRAP"
  transformer_layer_cls: "LlamaDecoderLayer"
