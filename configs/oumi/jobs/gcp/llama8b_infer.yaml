# Config to infer Llama 3.1 8B Instruct on GCP.
# Example command:
# oumi-launch -p configs/oumi/jobs/gcp/llama8b_infer.yaml -c llama8b-infer
name: llama8b-infer

resources:
  cloud: gcp
  accelerators: "A100:4"
  use_spot: true
  disk_size: 2000 # Disk size in GBs

# Upload working directory to remote ~/sky_workdir.
working_dir: .

# Mount local files.
file_mounts:
  ~/.netrc: ~/.netrc  # WandB credentials
  # Mount HF token, which is needed to download locked-down models from HF Hub.
  # This is created on the local machine by running `huggingface-cli login`.
  ~/.cache/huggingface/token: ~/.cache/huggingface/token

envs:
  # NOTE: For SFT, update this to point to your model checkpoint.
  MODEL_CHECKPOINT_DIR: output/llama8b.sft/checkpoint-1600
  # NOTE: For LoRA, update this to point to your LoRA adapter.
  LORA_ADAPTER_DIR: ""

setup: |
  set -e
  pip install '.[train,gpu]'
  # Install model from HF Hub. This tool increases download speed compared to
  # downloading the model during eval.
  pip install hf_transfer
  HF_HUB_ENABLE_HF_TRANSFER=1 huggingface-cli download meta-llama/Meta-Llama-3.1-8B-Instruct

run: |
  set -e  # Exit if any command failed.
  source ./configs/skypilot/sky_init.sh

  if test ${OUMI_NUM_NODES} -ne 1; then
    echo "LM Harness supports max 1 node. Actual: ${OUMI_NUM_NODES} nodes."
    exit 1
  fi

  echo "Starting evaluation for ${MODEL_CHECKPOINT_DIR} ..."
  if test -n "$LORA_ADAPTER_DIR"; then
    echo "Using LoRA adapter: ${LORA_ADAPTER_DIR}"
  fi

  set -x # Enable command tracing.
  accelerate launch \
    -m oumi.infer \
    -c configs/oumi/llama8b.infer.yaml \
    "model.model_name=${MODEL_CHECKPOINT_DIR}" \
    "model.adapter_model=${LORA_ADAPTER_DIR}"

  echo "Node ${SKYPILOT_NODE_RANK} is all done!"
