# Config to eval Llama 3.1 8B Instruct on Polaris.
# Example command:
# oumi-launch -p configs/oumi/jobs/polaris/llama8b_eval.yaml -c debug.$ALCF_USER user=$ALCF_USER
name: llama8b-eval
# NOTE: Replace with your username.
user: your_username

resources:
  cloud: polaris

# Upload working directory to /home/$USER/oumi_launcher/llama8b_eval.
working_dir: .

envs:
  # NOTE: For SFT, update this to point to your model checkpoint.
  MODEL_CHECKPOINT_DIR: meta-llama/Meta-Llama-3.1-8B-Instruct
  # NOTE: For LoRA, update this to point to your LoRA adapter.
  LORA_ADAPTER_DIR: ""

# `setup` will always be executed before `run`. It's strongly suggested to set any PBS
# directives in the `setup` section. Additional commands can also be run here after the
# PBS directives.
setup: |
  #PBS -l place=scatter
  #PBS -l walltime=01:00:00
  #PBS -l filesystems=home:eagle
  #PBS -A community_ai
  #PBS -o /eagle/community_ai/jobs/logs/
  #PBS -e /eagle/community_ai/jobs/logs/

run: |
  set -e  # Exit if any command failed.
  source ${PBS_O_WORKDIR}/scripts/polaris/polaris_init.sh

  if test ${OUMI_NUM_NODES} -ne 1; then
    echo "LM Harness supports max 1 node. Actual: ${OUMI_NUM_NODES} nodes."
    exit 1
  fi

  echo "Starting evaluation for ${MODEL_CHECKPOINT_DIR} ..."
  if test -n "$LORA_ADAPTER_DIR"; then
    echo "Using LoRA adapter: ${LORA_ADAPTER_DIR}"
  fi

  set -x # Enable command tracing.
  accelerate launch \
    -m oumi.evaluate \
    -c configs/oumi/llama8b.eval.yaml \
    "model.model_name=${MODEL_CHECKPOINT_DIR}" \
    "model.adapter_model=${LORA_ADAPTER_DIR}"

  echo -e "Finished eval on node:\n$(cat $PBS_NODEFILE)"
