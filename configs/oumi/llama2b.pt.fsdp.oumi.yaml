# OUMI FSDP pretraining (PT) config for Llama 2B.
# This uses the OUMI trainer instead of HF Accelerate.
# Compared to llama2b.pt.fsdp.trl.yaml, the main difference is this has FSDPParams,
# and gradient checkpointing is enabled within this config as opposed to the
# Accelerate config.

model:
  # Vocab size: 50272
  # Hidden size: 2048
  # MLP intermediate size: 8192
  # Num layers: 24
  # Num attention heads: 32
  # Num KV heads: 32
  # Weight tying: True
  model_name: "HuggingFaceFW/ablation-model-fineweb-v1"
  model_max_length: 2048
  torch_dtype_str: "bfloat16"
  attn_implementation: "flash_attention_2"
  load_pretrained_weights: False
  trust_remote_code: True

data:
  train:
    datasets:
      - dataset_name: "HuggingFaceFW/fineweb-edu"
        subset: "sample-10BT"
        split: "train"
      # Polaris copy of the dataset:
      # - dataset_name: "/eagle/community_ai/datasets/fineweb-edu/sample-10BT"
      #   subset: "default"
      #   split: "train"
    stream: True
    pack: True
    target_col: "text"
    experimental_use_async_dataset: True

training:
  trainer_type: OUMI
  save_steps: 500
  per_device_train_batch_size: 14
  gradient_accumulation_steps: 19

  enable_gradient_checkpointing: True
  gradient_checkpointing_kwargs:
    use_reentrant: False
  ddp_find_unused_parameters: False
  optimizer: "adamw_torch_fused"
  compile: True

  dataloader_num_workers: "auto"
  dataloader_prefetch_factor: 32

  logging_steps: 10
  log_model_summary: False
  output_dir: "output/llama2b.pt.fsdp"
  include_performance_metrics: True
  enable_wandb: True

fsdp:
  enable_fsdp: True
  sharding_strategy: "HYBRID_SHARD"
  mixed_precision: "bf16"
  auto_wrap_policy: "TRANSFORMER_BASED"
  transformer_layer_cls: "transformers.models.llama.modeling_llama.LlamaDecoderLayer"
