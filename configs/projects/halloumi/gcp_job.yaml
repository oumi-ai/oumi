# Config to full fine-tune Llama 3.1 8B Instruct on 1 GCP node.
# Example command:
# oumi launch up -c configs/projects/halloumi/gcp_job.yaml --cluster halloumi-8b-sft

name: halloumi-8b-sft

num_nodes: 1
resources:
  cloud: gcp
  accelerators: "A100-80GB:8"
  use_spot: False
  disk_size: 400 # Disk size in GBs

working_dir: .

file_mounts:
  ~/.netrc: ~/.netrc  # WandB credentials
  # Mount HF token, which is needed to download locked-down models from HF Hub.
  # This is created on the local machine by running `huggingface-cli login`.
  ~/.cache/huggingface/token: ~/.cache/huggingface/token

envs:
  WANDB_PROJECT: oumi-train
  OUMI_RUN_NAME: halloumi.8b.sft
  ACCELERATE_LOG_LEVEL: info
  # https://github.com/huggingface/tokenizers/issues/899#issuecomment-1027739758
  TOKENIZERS_PARALLELISM: false

setup: |
  set -e
  pip install uv && uv pip install '.[gpu]' hf_transfer
  pip install liger-kernel
  # Install model from HF Hub. This tool increases download speed compared to
  # downloading the model during training.
  HF_HUB_ENABLE_HF_TRANSFER=1 huggingface-cli download meta-llama/Llama-3.1-8B-Instruct --exclude original/*

run: |
  set -e  # Exit if any command failed.
  source ./configs/examples/misc/sky_init.sh

  set -x
  uv pip install --upgrade --no-deps --force-reinstall '.[gpu]'
  oumi distributed torchrun \
    -m oumi train \
    -c configs/projects/halloumi/8b_train.yaml \
    --training.run_name "${OUMI_RUN_NAME}.${SKYPILOT_TASK_ID}"

  echo "Node ${SKYPILOT_NODE_RANK} is all done!"
