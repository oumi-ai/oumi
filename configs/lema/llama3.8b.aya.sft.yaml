model:
  model_name: "meta-llama/Meta-Llama-3-8B-Instruct"
  model_max_length: 4096
  torch_dtype_str: "bfloat16"
  trust_remote_code: True
  attn_implementation: "flash_attention_2"

data:
  train:
    datasets:
      - dataset_name: "CohereForAI/aya_dataset"
        split: "train"
        preprocessing_function_name: "aya"
    stream: True
    pack: True
    target_col: "text"
  validation:
    datasets:
      - dataset_name: "CohereForAI/aya_dataset"
        split: "test"
        preprocessing_function_name: "aya"
    stream: True
    pack: True
    target_col: ${data.train.target_col}


training:
  optimizer: "adafactor"
  use_peft: False
  output_dir: "output/llama3.8b.aya.sft"
  trainer_type: "TRL_SFT"
  enable_gradient_checkpointing: true
  per_device_train_batch_size: 3 # Use bigger if you can.
  gradient_accumulation_steps: 2 # for single GPU, if 8 set to 2
  learning_rate: 2.0e-05
  lr_scheduler_type: "cosine"
  logging_dir: ${training.output_dir}/runs
  logging_first_step: True
  logging_steps: 10
  #eval_strategy: "steps"
  #eval_steps: 10
  warmup_ratio: 0.1
  gradient_checkpointing_kwargs:
    # Reentrant docs: https://pytorch.org/docs/stable/checkpoint.html#torch.utils.checkpoint.checkpoint
    use_reentrant: False # So gradients flow from frozen (non FT) input embeddings
  #num_train_epochs: 1
  save_steps: 25
  # resume_from_checkpoint: "your-checkpoint-directory" # Optional
  trainer_kwargs:
    dataset_text_field: ${data.train.target_col}
    max_seq_length: ${model.model_max_length}
    packing: True


  # Use for debugging purposes
  max_steps: 20
