# GPT-2's implementation in nanoGPT: https://github.com/karpathy/build-nanogpt

# Model automatically uses weight tying
model:
  model_name: "gpt2"  # 124M params
  # For local testing.
  # model_max_length: 128
  model_max_length: 1024
  torch_dtype_str: "bfloat16"
  attn_implementation: "flash_attention_2"
  load_pretrained_weights: False
  trust_remote_code: True

data:
  train:
    datasets:
      - dataset_name: "HuggingFaceFW/fineweb-edu"
        subset: "sample-10BT"
        split: "train"
    stream: True
    pack: True
    target_col: "text"

training:
  trainer_type: TRL_SFT
  # For local testing.
  # per_device_train_batch_size: 2
  # max_steps: 10
  per_device_train_batch_size: 64
  gradient_accumulation_steps: 8  # Disable when running on 8 GPUs
  max_steps: 19073
  # If enabled, reduces memory consumption by ~3x but causes a 30% training slowdown.
  enable_gradient_checkpointing: False

  # https://github.com/karpathy/build-nanogpt/blob/master/train_gpt2.py#L349
  optimizer: "adamw_torch_fused"
  learning_rate: 6.0e-04
  lr_scheduler_type: "cosine_with_min_lr"
  lr_scheduler_kwargs:
    min_lr_rate: 0.1
  warmup_steps: 715
  adam_beta1: 0.9
  adam_beta2: 0.95
  weight_decay: 0.1

  run_name: "gpt2_pt"
  output_dir: "output/gpt2.pt"
