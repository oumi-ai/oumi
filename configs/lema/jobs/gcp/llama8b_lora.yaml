# Config to LoRA tune Llama 3.1 8B Instruct on GCP.
# Example command:
# lema-launch -p configs/lema/jobs/gcp/llama8b_lora.yaml -c llama8b-lora
name: llama8b-lora

resources:
  cloud: gcp
  accelerators: "A100:4"
  # Allow Spot VM-s for A100 40GB GPUs, which are plentiful on GCP, and cost ~3X less.
  use_spot: true

# Upload working directory to remote ~/sky_workdir.
working_dir: .

# Mount local files.
file_mounts:
  ~/.netrc: ~/.netrc  # WandB credentials
  # Mount HF token, which is needed to download locked-down models from HF Hub.
  # This is created on the local machine by running `huggingface-cli login`.
  ~/.cache/huggingface/token: ~/.cache/huggingface/token

envs:
  WANDB_PROJECT: lema-train
  LEMA_RUN_NAME: llama8b.lora
  ACCELERATE_LOG_LEVEL: info
  # https://github.com/huggingface/tokenizers/issues/899#issuecomment-1027739758
  TOKENIZERS_PARALLELISM: false

setup: |
  set -e
  pip install '.[train]'
  pip install '.[gpu]'
  # Install model from HF Hub. This tool increases download speed compared to
  # downloading the model during training.
  pip install hf_transfer
  HF_HUB_ENABLE_HF_TRANSFER=1 huggingface-cli download meta-llama/Meta-Llama-3.1-8B-Instruct

run: |
  set -e  # Exit if any command failed.
  source ./configs/skypilot/sky_init.sh

  TOTAL_NUM_GPUS=$((${LEMA_NUM_NODES} * ${SKYPILOT_NUM_GPUS_PER_NODE}))
  ACCELERATE_MULTI_GPU_OPTION=
  if [${TOTAL_NUM_GPUS} -gt 1]; then
    ACCELERATE_MULTI_GPU_OPTION="--multi_gpu"
  fi

  set -x  # Print "accelerate launch" command with expanded variables
  accelerate launch \
      --num_machines ${LEMA_NUM_NODES} \
      --machine_rank ${SKYPILOT_NODE_RANK} \
      --num_processes ${TOTAL_NUM_GPUS} \
      --main_process_ip ${LEMA_MASTER_ADDR} \
      --main_process_port 8007 \
      ${ACCELERATE_MULTI_GPU_OPTION} \
      --config_file configs/accelerate/llama.ddp.yaml \
      -m lema.train \
      -c configs/lema/llama8b.lora.yaml \
      "training.run_name='${LEMA_RUN_NAME}.${SKYPILOT_TASK_ID}'" \
      "training.max_steps=100" \
      "training.save_final_model=false"

  echo "Node ${SKYPILOT_NODE_RANK} is all done!"
