# Config to full fine-tune Llama 3.1 70B Instruct on 4 GCP nodes.
# Example command:
# lema-launch -p configs/lema/jobs/gcp/llama70b_sft.yaml -c llama70b-sft
name: llama70b-sft

num_nodes: 4
resources:
  cloud: gcp
  accelerators: "A100:4"
  # Allow Spot VM-s for A100 40GB GPUs, which are plentiful on GCP, and cost ~3X less.
  use_spot: true
  disk_size: 2000 # Disk size in GBs

# Upload a working directory to remote ~/sky_workdir.
working_dir: .

# Upload local files.
file_mounts:
  ~/.netrc: ~/.netrc  # mount local netrc file to access private repos
  # Mount HF token, which is needed to download locked-down models from HF Hub.
  # This is created on the local machine by running `huggingface-cli login`.
  ~/.cache/huggingface/token: ~/.cache/huggingface/token

envs:
  WANDB_PROJECT: lema-train
  LEMA_RUN_NAME: llama70b.sft
  ACCELERATE_LOG_LEVEL: info
  # https://github.com/huggingface/tokenizers/issues/899#issuecomment-1027739758
  TOKENIZERS_PARALLELISM: false

setup: |
  set -e
  pip install '.[train]'
  pip install flash-attn --no-build-isolation
  # Download model from GCS, which is faster than downloading during training.
  # At the moment, you need to run this manually after ssh-ing into the cluster
  # because it requires manual authentication.
  # gsutil -m cp -R gs://lema-dev-us-central1/wizeng/models/models--meta-llama--Meta-Llama-3.1-70B-Instruct ~/.cache/huggingface/hub

run: |
  set -e  # Exit if any command failed.
  source ./configs/skypilot/sky_init.sh

  TOTAL_NUM_GPUS=$((${LEMA_NUM_NODES} * ${SKYPILOT_NUM_GPUS_PER_NODE}))
  set -x  # Print "accelerate launch" command with expanded variables
  accelerate launch \
      --num_machines ${LEMA_NUM_NODES} \
      --machine_rank ${SKYPILOT_NODE_RANK} \
      --num_processes ${TOTAL_NUM_GPUS} \
      --main_process_ip ${LEMA_MASTER_ADDR} \
      --main_process_port 8007 \
      --use_fsdp \
      --config_file configs/accelerate/llama70b.fsdp.yaml \
      -m lema.train \
      -c configs/lema/llama70b.sft.yaml \
      "training.run_name='${LEMA_RUN_NAME}.${SKYPILOT_TASK_ID}'" \
      "training.max_steps=10" \
      "training.max_steps=10" \
      "training.save_final_model=true"

  echo "Node ${SKYPILOT_NODE_RANK} is all done!"
