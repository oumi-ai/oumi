[build-system]
requires = ["setuptools>=64", "setuptools_scm>=8"]
build-backend = "setuptools.build_meta"

[tool.setuptools.package-data]
lema = ["LICENSE", "README.md"]

[tool.setuptools_scm]
# default scm config.

[tool.setuptools]
# default setuptools config.


[project]
name = "lema"
dynamic = ["version"]
readme = "README.md"
requires-python = ">=3.8"
description = "Learning Machines - Modeling Platform"
authors = [{ name = "LeMa Team", email = "contact@openlema.com" }]
classifiers = [
    "Programming Language :: Python :: 3",
    "Operating System :: OS Independent",
    "Development Status :: 3 - Alpha",
]
dependencies = [
    "torch",
    "transformers",
    "numpy<2.0.0",  # Freeze numpy to 1.* versions, as 2.0 breaks `trl` (OPE-37)
]

[project.urls]
Homepage = "https://github.com/openlema/lema"
Issues = "https://github.com/openlema/lema/issues"

[project.optional-dependencies]
dev = [
    "black",
    "isort",
    "mypy",
    "pre-commit",
    "pynvml",
    "pytest",
    "ruff",
    "pyright",
]
train = [
    "transformers",
    "trl==0.8.6",
    "peft",
    "datasets",
    "omegaconf",
    "datasets",
    "torchmetrics",
    "tensorboard",
    "wandb",
    "sentencepiece",   # for phi-3
    "flash-attention", # for phi-3
    "pynvml",
    "accelerate",      # for quantization
    "bitsandbytes",    # for quantization
]
# TODO: Switch to stable build "skypilot[lambda,runpod]"
# once RunPod multi-GPU bugfix is included (>0.5.0)
# https://github.com/skypilot-org/skypilot/pull/3291/files
cloud = [
    "skypilot-nightly[lambda,runpod]",
    "google-api-core>=2.19.0",
    "google-api-python-client",  # To enable GCP in Skypilot
    "google-auth>=2.30.0",
    "google-cloud-core>=2.4.1",
    "google-cloud-storage>=2.17.0",
]
all = ["lema[dev,train,cloud]"]

[project.scripts]
lema-evaluate = "lema.evaluate:main"
lema-infer = "lema.infer:main"
lema-train = "lema.train:main"

[tool.ruff]
line-length = 88
extend-include = ["*.ipynb"] # Include ipython notebooks

[tool.ruff.lint]
# pyflakes (F), pycodestyle (E, W), isort (I), pydocstyle (D), flake8-tidy-imports(TID)
select = ["F", "E", "W", "I", "D", "TID"]
ignore = ["D100", "D101", "D104"]         # Temporary rules

[tool.ruff.lint.flake8-tidy-imports]
# Disallow all relative imports.
ban-relative-imports = "all"

[tool.ruff.lint.per-file-ignores]
"tests/*" = ["D"] # Ignore docstring checks in tests

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.lint.isort]
known-first-party = ["lema"]

[tool.pyright]
include = ["src/lema/**", "tests/**"]
exclude = ["src/lema/experimental/**"]
typeCheckingMode = "basic"
pythonVersion = "3.8"
pythonPlatform = "All"                 # Include linux, mac, windows

reportPrivateImportUsage = "none"

[tool.pytest.ini_options]
testpaths = ["tests"]
